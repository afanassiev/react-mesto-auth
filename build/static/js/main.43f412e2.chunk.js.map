{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","utils/api.js","utils/constants.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/RemovePlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","onClick","type","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","key","ImagePopup","onClose","PopupWithForm","title","children","isOpen","onSubmit","buttonText","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","defaultValue","onChange","target","value","required","minLength","maxLength","api","apiConfig","this","url","baseUrl","headers","authorizedUserId","res","ok","json","Promise","reject","status","fetch","method","then","_resultHandler","data","body","JSON","stringify","item","cardId","catch","_errorHandler","authorization","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","placeholder","ref","AddPlacePopup","onAdderSubmit","setLink","RemovePlacePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isRemovePopupOpen","setIsRemovePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","removingCard","setRemovingCard","errorHandler","err","console","log","closeAllPopups","getUserInfo","getInitialCards","Provider","changeLikeCardStatus","newCard","newCards","c","setUserInfo","setUserAvatar","addNewCard","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.43f412e2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__logo\">Логотип</h1>\n      <hr className=\"header__line\"/>\n    </header>\n  )\n}","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  )\n}","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nexport default function Card({card, onCardClick, onCardLike, onCardDelete}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `item__delete-button ${isOwn ? '' : 'item__delete-button_hidden'}`\n  );\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (`item__checkbox ${isLiked ? 'item__checkbox_active' : ''}`);\n\n\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return (\n    <div className=\"item\">\n      <img\n        className=\"item__image\"\n        src={card.link}\n        alt={card.name}\n        onClick={handleClick}\n      />\n      <button\n        className={`${cardDeleteButtonClassName}`}\n        onClick={handleDeleteClick}\n      />\n      <div className=\"item__fragment item__fragment_textfield\">\n        <h2 className=\"item__title\">{card.name}</h2>\n        <div className=\"item__like\">\n          <button\n            className={`${cardLikeButtonClassName}`}\n            type=\"button\"\n            onClick={handleLikeClick}\n          />\n          <span className=\"item__like-counter\">{card.likes.length}</span>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect} from \"react\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function Main({cards, onCardLike, onCardDelete, onEditAvatar, onEditProfile, onAddPlace, onCardClick}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"contain\">\n      <section className=\"profile\">\n        <div className=\"profile__data\">\n          <button className=\"profile__avatar-button\" onClick={onEditAvatar}>\n            <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"аватар пользователя\"/>\n          </button>\n          <ul className=\"profile__info\">\n            <li className=\"profile__name\">{currentUser.name}</li>\n            <li className=\"profile__descr\">{currentUser.about}</li>\n          </ul>\n          <button className=\"profile__editbutton\" type=\"button\" onClick={onEditProfile}/>\n        </div>\n        <button className=\"profile__addbutton\" type=\"button\" onClick={onAddPlace}/>\n      </section>\n      <section className=\"elements\">\n        {\n          cards.map((card) =>\n          <Card\n            key={card._id}\n            card={card}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            onCardDelete={onCardDelete}\n          />\n          )\n        }\n      </section>\n    </main>\n  )\n}","import React from \"react\";\n\nexport default function ImagePopup({card, onClose}) {\n  return (\n    <div className={`popup popup__image ${card ? 'popup_opened' : ''}`}>\n      <div className=\"popup__image-container\">\n        <button className=\"popup__close-button popup__close-button_image\" type=\"button\" onClick={onClose}/>\n        <img className=\"popup__image-pic\" src={card.link}  alt={card.name}/>\n        <h3 className=\"popup__image-name\">{card.name}</h3>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\n\nexport default function PopupWithForm({title, name, children, isOpen, onClose, onSubmit, buttonText}) {\n  return (\n    <div className={`popup popup__${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <form\n          name={name}\n          className=\"popup__form popup__form_profile\"\n          onSubmit={onSubmit}\n          noValidate\n        >\n          <h2 className=\"popup__header\">{title}</h2>\n          {children}\n          <button className=\"popup__savebutton\">{buttonText}</button>\n        </form>\n        <button className=\"popup__close-button\" type=\"button\" onClick={onClose}/>\n      </div>\n    </div>\n  )\n}","import React, {useState, useEffect, useContext} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleName(evt) {\n    setName(evt.target.value)\n  }\n\n  function handleDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Редактировать профиль\"\n      name=\"edit\"\n      buttonText=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <label className=\"popup__label\">\n          <input\n            className=\"popup__input popup__input_name\"\n            type=\"text\"\n            id=\"profileName-input\"\n            defaultValue={name}\n            onChange={handleName}\n            name=\"profileNameInput\"\n            required\n            minLength=\"2\"\n            maxLength=\"40\"\n          />\n          <span\n            className=\"popup__error\"\n            id=\"profileName-input-error\"\n          />\n        </label>\n        <label className=\"popup__label\">\n          <input\n            className=\"popup__input popup__input_descr\"\n            type=\"text\"\n            id=\"descr-input\"\n            defaultValue={description}\n            onChange={handleDescription}\n            name=\"profileDescrInput\"\n            required minLength=\"2\"\n            maxLength=\"200\"\n          />\n          <span\n            className=\"popup__error\"\n            id=\"descr-input-error\"\n          />\n        </label>\n      </>\n    </PopupWithForm>\n\n  )\n}\n\nexport default EditProfilePopup;","import {apiConfig} from \"./constants\";\n\nclass Api {\n  constructor(apiConfig) {\n    this.url = apiConfig.baseUrl;\n    this.headers = apiConfig.headers;\n    this.authorizedUserId = apiConfig.authorizedUserId;\n  }\n\n  _resultHandler(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getUserInfo() {\n    return fetch(`${this.url}users/me`,\n      {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._resultHandler)\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this.url}users/me`,\n      {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n      })\n    })\n      .then(this._resultHandler)\n  }\n\n  getInitialCards() {\n    return fetch(`${this.url}cards`,\n      {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._resultHandler)\n  }\n\n  addNewCard(item) {\n    return fetch(`${this.url}cards`,\n      {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: item.name,\n          link: item.link\n        })\n      })\n      .then(this._resultHandler)\n  }\n\n  changeLikeCardStatus (cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this.url}cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this.headers\n          })\n            .then(this._resultHandler)\n            .catch(this._errorHandler)\n        } else {\n        return fetch(`${this.url}cards/likes/${cardId}`, {\n          method: 'DELETE',\n          headers: this.headers\n          })\n          .then(this._resultHandler)\n    }\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then(this._resultHandler)\n  }\n\n  setUserAvatar(avatar) {\n    return fetch(`${this.url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar.avatar\n      })\n    })\n        .then(this._resultHandler)\n  }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;","export const apiConfig = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13/',\n  authorizedUserId: '36b7746313f131617c443126',\n  headers: {\n    authorization: '9bf88dfb-94a4-43bc-a7b7-687a025522ae',\n    'Content-Type': 'application/json'\n  }\n}","import React, {useEffect, useRef} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n\n  const avatarRef = useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    })\n  }\n\n  useEffect(() => {\n    avatarRef.current.value = ''\n  }, [isOpen])\n\n  return (\n    <PopupWithForm\n      title=\"Обновить аватар\"\n      name=\"avatar\"\n      buttonText=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <label className=\"popup__label\">\n          <input\n            className=\"popup__input popup__input_avatar\"\n            type=\"url\"\n            id=\"url-avatar\"\n            name=\"urlAvatar\"\n            placeholder=\"Ссылка на аватар\"\n            ref={avatarRef}\n            required\n          />\n          <span className=\"popup__error\" id=\"url-avatar-error\"/>\n        </label>\n      </>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import React, {useState, useEffect} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({isOpen, onClose, onAdderSubmit}) {\n\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  function clearInputs() {\n    setName('');\n    setLink('');\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      clearInputs();\n    }\n  })\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAdderSubmit({\n      name,\n      link\n    });\n  }\n\n  function handleName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleLink(evt) {\n    setLink(evt.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Новое место\"\n      name=\"add\"\n      buttonText=\"Добавить!\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <label className=\"popup__label\">\n          <input\n            className=\"popup__input popup__input_placename\"\n            type=\"text\"\n            id=\"placename-input\"\n            name=\"placeNameInput\"\n            value={name}\n            onChange={handleName}\n            placeholder=\"Название\"\n            required\n            minLength=\"1\"\n            maxLength=\"30\"\n          />\n          <span\n            className=\"popup__error\"\n            id=\"placename-input-error\"\n          />\n        </label>\n        <label className=\"popup__label\">\n          <input\n            className=\"popup__input popup__input_link\"\n            type=\"url\"\n            id=\"url-input\"\n            name=\"urlInput\"\n            value={link}\n            onChange={handleLink}\n            placeholder=\"Ссылка на картинку\"\n            required\n          />\n          <span\n            className=\"popup__error\"\n            id=\"url-input-error\"\n          />\n        </label>\n      </>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction RemovePlacePopup({isOpen, onClose, onCardDelete}) {\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete();\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Вы уверены?\"\n      name=\"delete-confirmation\"\n      buttonText=\"Да\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n    </PopupWithForm>\n  )\n}\n\nexport default RemovePlacePopup;","import React, {useEffect, useState} from 'react';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport RemovePlacePopup from \"./RemovePlacePopup\";\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isRemovePopupOpen, setIsRemovePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n  const [cards, setCards] = useState([]);\n  const [removingCard, setRemovingCard] = useState([]);\n\n  const errorHandler = err => {\n    console.log(err);\n  }\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch(errorHandler)\n  }, [])\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then((data) => {\n        setCards(data)\n      })\n      .catch(errorHandler)\n  }, [])\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          setCards(newCards);\n    })\n      .catch(errorHandler)\n  }\n\n  function handleCardDelete() {\n    api.deleteCard(removingCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== removingCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch(errorHandler)\n  }\n\n  function handleRemovePopup(card) {\n    setIsRemovePopupOpen(true);\n    setRemovingCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsRemovePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(errorHandler)\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(errorHandler)\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCard(data)\n      .then((newCard) => {\n        setCards([...cards, newCard])\n        closeAllPopups();\n      })\n      .catch(errorHandler)\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"App\">\n      <div className=\"page__content\">\n        <Header/>\n        <Main\n          cards={cards}\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onCardDelete={handleRemovePopup}\n        />\n        <Footer/>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAdderSubmit={handleAddPlaceSubmit}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <RemovePlacePopup\n          isOpen={isRemovePopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleCardDelete}\n        />\n      </div>\n    </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}